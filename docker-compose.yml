version: '2'
networks:
    common:
volumes:
  mongodb-data:
  mongodb-replica-data:
  postgres-data:
  redis-data:
services:
    eventstore:
        container_name: eventstore
        image: eventstore/eventstore:latest
        # user: "${UID_GID}"
        ports:
            - "1113:1113"
            - "2113:2113"
        networks:
            - common
        restart: always 
 
    mongo:
        container_name: mongo
        image: mongo:latest
        volumes:
            # - ./data/mongo:/data/db
            - "mongodb-data:/data/db"
        # user: "${UID_GID}"
        ports:
            - "27000:27017"
        networks:
            - common
        restart: always    

    mongo-rs:
        container_name: mongo-rs
        image: linhld/mongodb-replicaset:development
        hostname: mongo-rs
        volumes:
            # - ./data/mongo-rs:/data
            - "mongodb-replica-data:/data"
        # user: "${UID_GID}"
        ports:
            - "27001:27001"
            - "27002:27002"
            - "27003:27003"
        networks:
            - common
        restart: always

    postgresql:
        container_name: postgresql
        image: postgres:alpine
        volumes:
            #  You need to create data/postgresql/pgdata folder manually or this will error
            # - ./data/postgresql/pgdata:/var/lib/postgresql/data
            - "postgres-data:/var/lib/postgresql/data"
            # Need to mound passwd to use user option
            - /etc/passwd:/etc/passwd:ro
            # If you want to create multiple database, mount this folder
            # - ./config/postgresql/init_script:/docker-entrypoint-initdb.d
        # user: "${UID_GID}"
        ports:
            - "5432:5432"
        environment: 
            - POSTGRES_USER=postgre
            - POSTGRES_PASSWORD=postgre
            # - POSTGRES_DB=default
            # If you want to create multiple database, uncomment this line
            # - POSTGRES_MULTIPLE_DATABASES=db1,db2,db3
        networks:
            - common
        restart: always

    redis:
        container_name: redis
        image: redis:alpine
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            # - ./data/redis:/data
             - "redis-data:/data"
        # user: "${UID_GID}"
        ports:
            - "6379:6379"
        networks:
            - common
        restart: always

    # mysql:
    #     container_name: mysql
    #     image: mysql:5.7
    #     volumes:
    #         - ./data/mysql:/var/lib/mysql
    #     user: "${UID_GID}"
    #     ports:
    #         - "3306:3306"
    #     environment:
    #         MYSQL_ROOT_PASSWORD: 'justapassword'
    #     networks:
    #         - common
    #     restart: always

