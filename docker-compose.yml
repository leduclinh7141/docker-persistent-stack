version: "3"
networks:
    common:
volumes:
    neo4j-data:
    mongodb-data:
    mongodb-replica-data:
    postgres-data:
    mysql-data:
    redis-data:
    mssql-data:
        driver: local
services:
    neo4j:
        container_name: neo4j
        image: neo4j:4.2
        # image: discsports/neo4j-apoc
        volumes:
            - neo4j-data:/data
        user: "${UID_GID}"
        ports:
            - 7474:7474
            - 7687:7687
        environment:
            # - NEO4J_AUTH=none
            # - NEO4J_AUTH=neo4j/admin
            - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
            - NEO4JLABS_PLUGINS=["graph-data-science", "apoc"]
            - NEO4J_dbms_security_procedures_whitelist=gds.*, apoc.*
            - NEO4J_dbms_security_procedures_unrestricted=gds.*, apoc.*
        networks:
            - common
        restart: always
    sqlserver:
        container_name: sqlserver
        image: mcr.microsoft.com/mssql/server:2017-latest
        # hostname: sqlserver
        ports:
            - 1433:1433
        volumes:
            # - ./init-data:/init-data
            # - ./start-up.sh:/start-up.sh
            - mssql-data:/var/opt/mssql
        # user: "${UID_GID}"
        env_file:
            - .env
        # command: "sh -c 'start-up.sh & /opt/mssql/bin/sqlservr;'"
        # environment:
        #     - ACCEPT_EULA=Y
        #     - SA_PASSWORD=P1assword
        #     - MSSQL_COLLATION=Japanese_CI_AS
        networks:
            - common
        restart: always
    redis:
        image: "bitnami/redis"
        container_name: redis
        ports:
            - "6379:6379"
        networks:
            - common
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        restart: always
    mongo:
        container_name: mongo
        image: mongo:latest
        volumes:
            # - ./data/mongo:/data/db
            - "mongodb-data:/data/db"
        # user: "${UID_GID}"
        ports:
            - "27000:27017"
        networks:
            - common
        restart: always
    mongo-rs:
        container_name: mongo-rs
        image: linhld/mongodb-replicaset:development
        hostname: mongo-rs
        volumes:
            # - ./data/mongo-rs:/data
            - "mongodb-replica-data:/data"
        # user: "${UID_GID}"
        ports:
            - "27001:27001"
            - "27002:27002"
            - "27003:27003"
        networks:
            - common
        extra_hosts:
            - "mongo-rs:127.0.0.1"
        restart: always
    # eventstore:
    #     container_name: eventstore
    #     image: eventstore/eventstore:latest
    #     # user: "${UID_GID}"
    #     ports:
    #         - "1113:1113"
    #         - "2113:2113"
    #     networks:
    #         - common
    #     restart: always
    postgresql:
        container_name: postgresql
        image: postgres:alpine
        env_file: ./.env
        volumes:
            #  You need to create data/postgresql/pgdata folder manually or this will error
            # - ./data/postgresql/pgdata:/var/lib/postgresql/data
            - "postgres-data:/var/lib/postgresql/data"
            # Need to mound passwd to use user option
            # - /etc/passwd:/etc/passwd:ro
            # If you want to create multiple database, mount this folder
            # - ./config/postgresql/init_script:/docker-entrypoint-initdb.d
        # user: "${UID_GID}"
        ports:
            - "54321:5432"
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_USER}
            # - POSTGRES_DB=default
            # If you want to create multiple database, uncomment this line
            # - POSTGRES_MULTIPLE_DATABASES=db1,db2,db3
        networks:
            - common
        restart: always
    mysql:
        container_name: mysql
        image: mysql:5.7
        volumes:
            - mysql-data:/var/lib/mysql
        user: "${UID_GID}"
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "justapassword"
        networks:
            - common
        restart: always
